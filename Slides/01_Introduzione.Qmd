---
title: "Introduzione a R Markdown e Quarto"
author: "Ambra Perugini"
format:
  revealjs:
    css: custom.css
    code-line-numbers: false
    theme: default
    slide-number: c/t
    self-contained: true
    code-fold: false
    code-summary: "Show code"
    code-overflow: wrap
    title-slide-attributes: 
     data-background-image: "figures/psicostatLogo.png"
     data-background-size: "contain"
     data-background-opacity: "0.15"
execute:
  echo: true
  output: true
---


## Perché usare un linguaggio di markup?

- Riproducibilità: permette di documentare e replicare analisi scientifiche

- Automazione: genera report, articoli e presentazioni senza copiare e incollare

- Flessibilità: esportazione in HTML, PDF, Word, e altro

- Collaborazione: facilita il lavoro di gruppo e la condivisione dei risultati

![](figures/collab.png){fig-align="center"}

## Cos'è un linguaggio di markup?

- Un sistema per strutturare e formattare testo con comandi testuali

- Diverso da un word processor: il contenuto e la formattazione sono separati

- Markdown è un esempio di linguaggio di markup semplice e leggibile

![](figures/meq.png){fig-align="center"}

## Come funziona?

1. Scrivi il codice: un file di testo con sezioni in Markdown e blocchi di codice R

2. Esegui il codice: genera risultati direttamente nel documento

3. Compila il documento: scegli il formato di output (HTML, PDF, Word, presentazioni...)

![](figures/outputs.png){fig-align="center"}

## Cosa faremo durante il corso?

- Report dinamici con dati aggiornabili automaticamente

- Presentazioni interattive con Reveal.js

- Impostazione di un file per scrivere tesi e articoli in formato accademico (PDF, Word)

- Esercitazione con presentazione finale

![](figures/scale.jpeg){fig-align="center"}

## {}

![](figures/letsgo.jpeg)

## Impostazione di un progetto in RStudio

1. Apri **RStudio** e vai su `File -> New Project`

2. Scegli **New Directory** e poi `Quarto Project` o `R Markdown`

3. Seleziona la cartella di destinazione e dai un nome al progetto

4. Clicca su **Create Project**

![](figures/repo.png){fig-align="center"}

# Struttura di un file Quarto (.qmd) o R Markdown (.Rmd)

## 1. YAML (testata del documento) {.scrollable}

Definisce il titolo, autore, formato di output e altre opzioni:


```yaml
---
title: "Analisi dei dati"
author: "Nome Cognome"
date: "`r Sys.Date()`"
output: html_document
---
```

Tipi di output:

- pdf_document
- html_document
- word_document


Altre opzioni:

- `subtitle` 
- `theme`
- `fontcolor`
- `fig-width`
- `code-fold`

## 2. Corpo del documento {.scrollable}

Testo in Markdown (e Quarto) per strutturare il contenuto:

**Titoli e sottotitoli**

```markdown
# Titolo principale
## Sottotitolo di primo livello
### Sottotitolo di secondo livello
#### Sottotitolo di terzo livello
```

**Paragrafi e formattazione del testo**

```markdown
Questo è un **paragrafo di esempio** con testo in grassetto.

Si può anche usare *corsivo* o `testo con font monospaziato`.
```

**Liste puntate e numerate**

```markdown
- Elemento 1
- Elemento 2
  - Sotto-elemento 2.1
  - Sotto-elemento 2.2

1. Primo punto
2. Secondo punto
3. Terzo punto
```

## 3. Blocchi di codice

Si usano per inserire codice ed eseguire analisi:

```r

#| warning: false
#| include: false
#| eval: false
#| echo: false
summary(cars)

```

- warning: se false, non fa vedere i warning del modello e/o funzione
- include: nel repoprt o documento si vede oppure no l'ouput
- eval: se true gira il codice, se false non gira proprio
- echo: false -> non si vede il codice, se echo -> true si vede il codice che avete utilizzato

Per settare opzioni dei chunk in **Quarto**, in stile YAML, utilizzare #| all'inizio di riga dentro il chunk. In R Markdown invece inserire le informazioni dentro `{r message = false, echo = false}`

## Inserire formule

- Equazioni in una nuova riga: `$$…$$`
- Equazione inline `$…$`

:::{style="text-align: center;"}

`$$ Y = \beta_{0} + \beta_{1} X $$`

:::

$$ Y = \beta_{0} + \beta_{1} X$$

![](figures/math.jpeg){fig-align="center"}

## Esecuzione e rendering
1. Per inserire i chunk `Ctrl + Alt + I` (Windows) `Cmd + Option + I` (Mac)
2. Per eseguire i blocchi di codice, usa `Ctrl + Invio` (Windows) o `Cmd + Invio` (Mac)
3. Per generare il documento finale, clicca su `Render` (Quarto) o `Knit` (R Markdown)

![](figures/vanellope.webp){fig-align="center"}

## Applicazioni pratiche
- **Report dinamici** con dati aggiornabili automaticamente
- **Presentazioni scientifiche** interattive con Reveal.js
- **Scrittura di tesi e articoli** in formato accademico (PDF, Word, LaTeX)
- **Dashboard e documentazione interattiva** per la ricerca

![](figures/FelixAggiustatutto.webp){fig-align="center"}

## Conclusione
- R Markdown e Quarto semplificano la comunicazione scientifica
- Strumenti potenti per creare documenti chiari, riproducibili e ben formattati
- Indispensabili per una ricerca trasparente e collaborativa

![](figures/Kirby2.png)

